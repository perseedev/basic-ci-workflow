name: Python CI/CD Pipeline

# 1. Trigger: Define when the workflow should run.
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 2. Jobs: Define a set of jobs to be executed
jobs:
  build_and_test:
    # Set the runner environment (the machine that executes the steps)
    runs-on: ubuntu-latest

    # 3. Steps: Define the sequence of commands
    steps:
    
    # Checkout: Get the code from the repo
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup Python: Install the required Python version
    - name: Set up Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # Install Dependencies: Get everything needed to run the app/tests
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # Build (Simulation): Run a simple command to "build" the application
    - name: Simulated Build
      run: python app.py
      # The output of this step will be logged

    # Test: Run the automated unit tests
    - name: Run Tests
      run: python test_app.py
